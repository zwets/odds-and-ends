#!/bin/bash
#
#  barrnap-16S - quickly extract 16S rRNA from FASTA using barrnap
#  Copyright (C) 2017  Marco van Zwetselaar <io@zwets.it>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Home: https://github.com/zwets/odds-and-ends

# Function to exit this script with an error message on stderr
err_exit() {
    echo "$(basename "$0"): $*" >&2
    exit 1
}

# Function to emit information to standard error if VERBOSE is set
emit() {
    [ -z "$VERBOSE" ] || echo "$(basename "$0"): $*" >&2 || true
}

# Function either unzips file $1 to $2 or links to original
# Note that gzip need not be decompressed for zgrep or samtools
unzip_or_link() {
    local FT="$(file --mime-type --brief "$1")"
    case "$FT" in
    "application/x-xz")
        emit "unxzipping $1"
        xz -dc "$1" >"$2"
        ;;
    "application/x-xz")
        emit "ungzipping $1"
        gzip -dc "$1" >"$2"
        ;;
    *)  emit "linking $1"
        ln -sf "$1" "$2"
        ;;
    esac
}

# Function to show usage information and exit
usage_exit() {
    echo "
Usage: $(basename "$0") [OPTIONS] FILE

  Quickly extract 16S rRNA sequences from FILE.  FILE must be FASTA
  format and may be compressed with xz or gzip.
  
  OPTIONS
   -h,--help       this help

  This tool uses barrnap (https://github.com/tseemap/barrnap) to
  locate the rRNA, and unfasta (https://github.com/zwets/unfasta)
  to extract the sequences.
" >&2
    exit ${1:-1}
}

# Parse options

unset VERBOSE
while [ $# -ne 0 -a "$(expr "$1" : '\(.\)..*')" = "-" ]; do
    case $1 in
    -v|--verbose)
        VERBOSE=1
        ;;
    -h|--help)
        usage_exit 0
        ;;
    *) usage_exit
        ;;
    esac
    shift
done

# Check args and required scripts

[ $# -eq 1 ] || usage_exit

which barrnap >/dev/null || 
    err_exit "command not found: barrnap (install from https://github.com/tseeman/barrnap)"
(which uf && which uf-select && which uf-cut) >/dev/null || 
    err_exit "unfasta not found, install from https://github.com/zwets/unfasta"

# Execute main

TMP_FASTA="$(basename "$0").$$.fna"

unzip_or_link "$1" "$TMP_FASTA"

barrnap --quiet "$TMP_FASTA" | 
fgrep 'Name=16S_rRNA' | 
awk -v F="$TMP_FASTA" '{print "uf " F " | uf-select -g \"" $1 "\" | uf-cut -m " $4 ":" $5 " | uf-map -t \"sed -e s,^>,>16S_rRNA_from_,\""}' | 
sh

rm -f "$TMP_FASTA"

exit 0

# vim: sts=4:sw=4:et:ai:si
